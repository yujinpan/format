import{H as r,M as p,L as d}from"./file-72a0e2f5.js";import{t as c}from"./utils-7b944b2f.js";import{d as u,_ as f,r as m,o as g,c as _,e as h,w as y,b as o,f as s}from"./index-38b6c3fd.js";const N=u({components:{ElButton:r},data(){return{loading:!1}},methods:{uploadFile(){const e=Array.from(this.$refs.input.files);return this.$refs.input.value="",this.loading=!0,Promise.all(e.map(async t=>{const n=await p(t),a=c(n);d(JSON.stringify(a),"geojson.json")})).finally(()=>this.loading=!1)},triggerUpload(){this.$refs.input.click()}}}),j=o("h3",{class:"margin-top-medium"},"TopoJSON To GeoJSON",-1),C=o("div",{class:"margin-top-base"},[s(" TopoJSON: "),o("pre",null,[o("code",null,"{ type: 'Topology', arcs: [], objects: {} }")])],-1),b=o("div",{class:"margin-top-base"},[s(" GeoJSON: "),o("pre",null,[o("code",null,"{ type: 'FeatureCollection', features: [] }")])],-1);function J(e,t,n,a,O,S){const l=m("el-button");return g(),_("div",null,[h(l,{onClick:e.triggerUpload,loading:e.loading},{default:y(()=>[s(" Upload Files ")]),_:1},8,["onClick","loading"]),o("input",{onChange:t[0]||(t[0]=(...i)=>e.uploadFile&&e.uploadFile(...i)),style:{position:"absolute",top:"-99999px"},ref:"input",type:"file",accept:".json",multiple:""},null,544),j,C,b])}const k=f(N,[["render",J]]);export{k as default};
